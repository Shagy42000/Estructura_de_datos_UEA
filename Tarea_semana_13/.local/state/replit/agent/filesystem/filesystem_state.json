{"file_contents":{"RevistaCatalogo.cs":{"content":"using System;\nusing System.Collections.Generic;\n\nnamespace CatalogoRevistas\n{\n    class RevistaCatalogo\n    {\n        private List<string> revistas;\n\n        public RevistaCatalogo()\n        {\n            // Inicializamos el catálogo con al menos 10 títulos de revistas\n            revistas = new List<string>\n            {\n                \"National Geographic\",\n                \"Time\",\n                \"Forbes\",\n                \"Scientific American\",\n                \"Nature\",\n                \"Vogue\",\n                \"Sports Illustrated\",\n                \"Harvard Business Review\",\n                \"The Economist\",\n                \"Popular Science\"\n            };\n        }\n\n        // Método público que inicia la búsqueda recursiva\n        public bool BuscarRevistaRecursiva(string titulo)\n        {\n            return BuscarRecursivo(titulo, 0);\n        }\n\n        // Método recursivo privado\n        private bool BuscarRecursivo(string titulo, int indice)\n        {\n            // Caso base: si llegamos al final de la lista\n            if (indice >= revistas.Count)\n                return false;\n\n            // Comparamos ignorando mayúsculas/minúsculas\n            if (revistas[indice].Equals(titulo, StringComparison.OrdinalIgnoreCase))\n                return true;\n\n            // Llamada recursiva avanzando al siguiente índice\n            return BuscarRecursivo(titulo, indice + 1);\n        }\n\n        // Método para mostrar todos los títulos\n        public void MostrarCatalogo()\n        {\n            Console.WriteLine(\"\\n--- Catálogo de Revistas ---\");\n            foreach (var revista in revistas)\n            {\n                Console.WriteLine(\"- \" + revista);\n            }\n        }\n    }\n}","size_bytes":1723},"conversation.md":{"content":"Usuario pidió una aplicación en C# que gestione un catálogo de revistas, con búsqueda recursiva o iterativa, menú interactivo y buenas prácticas. Aquí se genera un proyecto en Replit con C#. ","size_bytes":198},"main.cs":{"content":"using System;\n\nnamespace CatalogoRevistas\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            RevistaCatalogo catalogo = new RevistaCatalogo();\n            bool salir = false;\n\n            while (!salir)\n            {\n                Console.WriteLine(\"\\n===== Catálogo de Revistas =====\");\n                Console.WriteLine(\"1. Buscar título\");\n                Console.WriteLine(\"2. Mostrar todos los títulos\");\n                Console.WriteLine(\"3. Salir\");\n                Console.Write(\"Seleccione una opción: \");\n\n                string opcion = Console.ReadLine();\n                switch (opcion)\n                {\n                    case \"1\":\n                        Console.Write(\"Ingrese el título a buscar: \");\n                        string titulo = Console.ReadLine();\n                        bool encontrado = catalogo.BuscarRevistaRecursiva(titulo);\n                        Console.WriteLine(encontrado ? \"Encontrado\" : \"No encontrado\");\n                        break;\n                    case \"2\":\n                        catalogo.MostrarCatalogo();\n                        break;\n                    case \"3\":\n                        salir = true;\n                        break;\n                    default:\n                        Console.WriteLine(\"Opción inválida, intente de nuevo.\");\n                        break;\n                }\n            }\n        }\n    }\n}","size_bytes":1429}},"version":1}